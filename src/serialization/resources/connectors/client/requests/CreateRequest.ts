/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Cohere from "../../../../../api";
import * as core from "../../../../../core";

export const CreateRequest: core.serialization.Schema<serializers.CreateRequest.Raw, Cohere.CreateRequest> =
    core.serialization.object({
        name: core.serialization.string(),
        description: core.serialization.string().optional(),
        url: core.serialization.string(),
        excludes: core.serialization.list(core.serialization.string()).optional(),
        oauth: core.serialization.lazyObject(async () => (await import("../../../..")).CreateConnectorOAuth).optional(),
        active: core.serialization.boolean().optional(),
        continueOnFailure: core.serialization.boolean().optional(),
        serviceAuth: core.serialization
            .lazyObject(async () => (await import("../../../..")).CreateConnectorServiceAuth)
            .optional(),
    });

export declare namespace CreateRequest {
    interface Raw {
        name: string;
        description?: string | null;
        url: string;
        excludes?: string[] | null;
        oauth?: serializers.CreateConnectorOAuth.Raw | null;
        active?: boolean | null;
        continueOnFailure?: boolean | null;
        serviceAuth?: serializers.CreateConnectorServiceAuth.Raw | null;
    }
}
