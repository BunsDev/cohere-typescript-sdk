/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Cohere from "../../api";
import * as core from "../../core";

export const ChatSearchResultsEvent: core.serialization.ObjectSchema<
    serializers.ChatSearchResultsEvent.Raw,
    Cohere.ChatSearchResultsEvent
> = core.serialization
    .object({
        searchResults: core.serialization.property(
            "search_results",
            core.serialization.list(core.serialization.lazyObject(async () => (await import("..")).ChatSearchResult))
        ),
        documents: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("..")).ChatDocument)
        ),
    })
    .extend(core.serialization.lazyObject(async () => (await import("..")).ChatStreamEvent));

export declare namespace ChatSearchResultsEvent {
    interface Raw extends serializers.ChatStreamEvent.Raw {
        search_results: serializers.ChatSearchResult.Raw[];
        documents: serializers.ChatDocument.Raw[];
    }
}
