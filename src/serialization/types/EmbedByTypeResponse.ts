/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Cohere from "../../api";
import * as core from "../../core";

export const EmbedByTypeResponse: core.serialization.ObjectSchema<
    serializers.EmbedByTypeResponse.Raw,
    Cohere.EmbedByTypeResponse
> = core.serialization.object({
    id: core.serialization.string(),
    embeddings: core.serialization.lazyObject(async () => (await import("..")).EmbedByTypeResponseEmbeddings),
    texts: core.serialization.list(core.serialization.string()),
    meta: core.serialization.lazyObject(async () => (await import("..")).ApiMeta).optional(),
});

export declare namespace EmbedByTypeResponse {
    interface Raw {
        id: string;
        embeddings: serializers.EmbedByTypeResponseEmbeddings.Raw;
        texts: string[];
        meta?: serializers.ApiMeta.Raw | null;
    }
}
