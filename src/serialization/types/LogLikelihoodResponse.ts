/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Cohere from "../../api";
import * as core from "../../core";

export const LogLikelihoodResponse: core.serialization.ObjectSchema<
    serializers.LogLikelihoodResponse.Raw,
    Cohere.LogLikelihoodResponse
> = core.serialization.object({
    id: core.serialization.string(),
    promptTokens: core.serialization.property("prompt_tokens", core.serialization.list(core.serialization.unknown())),
    completionTokens: core.serialization.property(
        "completion_tokens",
        core.serialization.list(core.serialization.unknown())
    ),
    rawPromptTokens: core.serialization.property(
        "raw_prompt_tokens",
        core.serialization.list(core.serialization.unknown())
    ),
    meta: core.serialization.lazyObject(async () => (await import("..")).ApiMeta).optional(),
});

export declare namespace LogLikelihoodResponse {
    interface Raw {
        id: string;
        prompt_tokens: unknown[];
        completion_tokens: unknown[];
        raw_prompt_tokens: unknown[];
        meta?: serializers.ApiMeta.Raw | null;
    }
}
