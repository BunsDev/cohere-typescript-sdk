/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import * as Cohere from "../../../api";
import * as core from "../../../core";

export const CreateClusterJobRequest: core.serialization.Schema<
    serializers.CreateClusterJobRequest.Raw,
    Cohere.CreateClusterJobRequest
> = core.serialization.object({
    required: core.serialization.unknown().optional(),
    embeddingsUrl: core.serialization.property("embeddings_url", core.serialization.string().optional()),
    inputDatasetId: core.serialization.property("input_dataset_id", core.serialization.string().optional()),
    minClusterSize: core.serialization.property("min_cluster_size", core.serialization.number().optional()),
    nNeighbors: core.serialization.property("n_neighbors", core.serialization.number().optional()),
    isDeterministic: core.serialization.property("is_deterministic", core.serialization.boolean().optional()),
    generateDescriptions: core.serialization.property("generate_descriptions", core.serialization.boolean().optional()),
});

export declare namespace CreateClusterJobRequest {
    interface Raw {
        required?: unknown | null;
        embeddings_url?: string | null;
        input_dataset_id?: string | null;
        min_cluster_size?: number | null;
        n_neighbors?: number | null;
        is_deterministic?: boolean | null;
        generate_descriptions?: boolean | null;
    }
}
