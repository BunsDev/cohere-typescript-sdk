/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import * as Cohere from "../../../api";
import * as core from "../../../core";

export const UpdateClusterJobRequest: core.serialization.Schema<
    serializers.UpdateClusterJobRequest.Raw,
    Cohere.UpdateClusterJobRequest
> = core.serialization.object({
    jobId: core.serialization.property("job_id", core.serialization.string().optional()),
    status: core.serialization.lazy(async () => (await import("../..")).UpdateClusterJobRequestStatus).optional(),
    clusters: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../..")).Cluster))
        .optional(),
    outputClustersGsPath: core.serialization.property(
        "output_clusters_gs_path",
        core.serialization.string().optional()
    ),
    outputOutliersGsPath: core.serialization.property(
        "output_outliers_gs_path",
        core.serialization.string().optional()
    ),
    error: core.serialization.string().optional(),
    inputTrackingMetrics: core.serialization.property(
        "input_tracking_metrics",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    outputTrackingMetrics: core.serialization.property(
        "output_tracking_metrics",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
});

export declare namespace UpdateClusterJobRequest {
    interface Raw {
        job_id?: string | null;
        status?: serializers.UpdateClusterJobRequestStatus.Raw | null;
        clusters?: serializers.Cluster.Raw[] | null;
        output_clusters_gs_path?: string | null;
        output_outliers_gs_path?: string | null;
        error?: string | null;
        input_tracking_metrics?: Record<string, unknown> | null;
        output_tracking_metrics?: Record<string, unknown> | null;
    }
}
